diff --git a/node_modules/remix-auth/build/strategies/github.d.ts b/node_modules/remix-auth/build/strategies/github.d.ts
index 397cfe9..f9cac60 100644
--- a/node_modules/remix-auth/build/strategies/github.d.ts
+++ b/node_modules/remix-auth/build/strategies/github.d.ts
@@ -5,6 +5,7 @@ export interface GitHubStrategyOptions {
     callbackURL: string;
     scope?: string;
     allowSignup?: boolean;
+    userAgent?: string;
 }
 export interface GitHubProfile extends OAuth2Profile {
     id: string;
diff --git a/node_modules/remix-auth/build/strategies/github.js b/node_modules/remix-auth/build/strategies/github.js
index 8aa30cf..92154eb 100644
--- a/node_modules/remix-auth/build/strategies/github.js
+++ b/node_modules/remix-auth/build/strategies/github.js
@@ -4,7 +4,7 @@ exports.GitHubStrategy = void 0;
 const authenticator_1 = require("../authenticator");
 const oauth2_1 = require("./oauth2");
 class GitHubStrategy extends oauth2_1.OAuth2Strategy {
-    constructor({ clientID, clientSecret, callbackURL, scope, allowSignup, }, verify) {
+    constructor({ clientID, clientSecret, callbackURL, scope, allowSignup, userAgent }, verify) {
         super({
             clientID,
             clientSecret,
@@ -16,6 +16,7 @@ class GitHubStrategy extends oauth2_1.OAuth2Strategy {
         this.userInfoURL = "https://api.github.com/user";
         this.scope = scope !== null && scope !== void 0 ? scope : "email";
         this.allowSignup = allowSignup !== null && allowSignup !== void 0 ? allowSignup : true;
+        this.userAgent = userAgent !== null && userAgent  !== void 0 ? userAgent : "Remix Auth";
     }
     authorizationParams() {
         return new URLSearchParams({
@@ -28,6 +29,7 @@ class GitHubStrategy extends oauth2_1.OAuth2Strategy {
             headers: {
                 Accept: "application/vnd.github.v3+json",
                 Authorization: `token ${accessToken}`,
+                "User-Agent": this.userAgent,
             },
         });
         let data = await response.json();
